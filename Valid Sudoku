class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        
        
        for(int i=0;i<board.size();i++)
        {
            map<char,int>mp;
            for(int j=0;j<board[i].size();j++)
            {
                mp[board[i][j]]++;
                if(mp[board[i][j]]>1 and ((board[i][j]-'0')>=1 and (board[i][j]-'0')<=9))
                {
                    return false;
                }
            }
        }
        for(int i=0;i<board.size();i++)
        {
            map<char,int>mp;
            for(int j=0;j<board.size();j++)
            {
                mp[board[j][i]]++;
               if(mp[board[j][i]]>1 and ((board[j][i]-'0')>=1 and (board[j][i]-'0')<=9))
                {
                    return false;
                }
            }
        }
         
       map<char,int>mp;
        for(int i=0;i<3;i++)
        {
            for(int j=0;j<3;j++)
            {
                mp[board[i][j]]++;
                if(mp[board[i][j]]>1 and ((board[i][j]-'0')>=1 and (board[i][j]-'0')<=9))
                {
                    return false;
                }
            }
        }
        mp.clear();

        for(int i=0;i<3;i++)
        {
            for(int j=3;j<6;j++)
            {
                mp[board[i][j]]++;
                if(mp[board[i][j]]>1 and ((board[i][j]-'0')>=1 and (board[i][j]-'0')<=9))
                {
                    return false;
                }
            }
        }
        mp.clear();

        for(int i=0;i<3;i++)
        {
            for(int j=6;j<9;j++)
            {
                mp[board[i][j]]++;
               if(mp[board[i][j]]>1 and ((board[i][j]-'0')>=1 and (board[i][j]-'0')<=9))
                {
                    return false;
                }
            }
        }
        mp.clear();

        for(int i=3;i<6;i++)
        {
            for(int j=0;j<3;j++)
            {
                mp[board[i][j]]++;
               if(mp[board[i][j]]>1 and ((board[i][j]-'0')>=1 and (board[i][j]-'0')<=9))
                {
                    return false;
                }
            }
        }
        mp.clear();
        for(int i=3;i<6;i++)
        {
            for(int j=3;j<6;j++)
            {
                mp[board[i][j]]++;
                if(mp[board[i][j]]>1 and ((board[i][j]-'0')>=1 and (board[i][j]-'0')<=9))
                {
                    return false;
                }
            }
        }
        mp.clear();

        for(int i=3;i<6;i++)
        {
            for(int j=6;j<9;j++)
            {
                mp[board[i][j]]++;
               if(mp[board[i][j]]>1 and ((board[i][j]-'0')>=1 and (board[i][j]-'0')<=9))
                {
                    return false;
                }
            }
        }
        mp.clear();

        for(int i=6;i<9;i++)
        {
            for(int j=0;j<3;j++)
            {
                mp[board[i][j]]++;
               if(mp[board[i][j]]>1 and ((board[i][j]-'0')>=1 and (board[i][j]-'0')<=9))
                {
                    return false;
                }
            }
        }
        mp.clear();
        for(int i=6;i<9;i++)
        {
            for(int j=3;j<6;j++)
            {
                mp[board[i][j]]++;
                if(mp[board[i][j]]>1 and ((board[i][j]-'0')>=1 and (board[i][j]-'0')<=9))
                {
                    return false;
                }
            }
        }
        mp.clear();

        for(int i=6;i<9;i++)
        {
            for(int j=6;j<9;j++)
            {
                mp[board[i][j]]++;
               if(mp[board[i][j]]>1 and ((board[i][j]-'0')>=1 and (board[i][j]-'0')<=9))
                {
                    return false;
                }
            }
        }
        mp.clear();

return true;

    }
};
